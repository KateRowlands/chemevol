'''
Chemevol - Python package to read in a star formation history file, 
input galaxy parameters and run chemical evolution to determine the evolution
of gas, metals and dust in galaxies.  

The code is based on Morgan & Edmunds 2003 (MNRAS, 343, 427) 
and described in detail in Rowlands et al 2014 (MNRAS, 441, 1040).   

If you use this code, please do cite the above papers.

Copyright (C) 2015 Haley Gomez and Edward Gomez, Cardiff University and LCOGT
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
'''

'''
First set up initial parameters for galaxy model by editing the dictionary
initial_galaxy_params

- gasmass_init: initial gas mass in solar masses 
- SFH: filename for star formation history file (filename.sfh)
- gamma: power law if using SFH generated by MAGPHYS code  
- IMF_fn: choice of IMF function: Chab, TopChab, kroup or Salp
- dust_source: choice of dust sources to be included: 
	SN: supernova dust onlt
	LIMS: low intermediate mass stars dust only
	LIMS+SN: SN+LIMS
	GG: interstellar grain growth only
	ALL: grain growth 
- destroy: add dust destruction from SN shocks True or False 
- inflows: add a number (parameterized by X * SFR)
- outflows: add a number (parameterized by X * SFR)

Each run will be used to generate the evolution of dust, gas, 
SFR, metals and stars over time
'''



initial_galaxy_params = {
				'run1':{'gasmass_init':4e10, 'SFH':'MilkyWay.sfh','gamma':0, \
				'IMF_fn':'Chab', 'dust_source':'ALL', 'destroy':True, \
				'inflows':0, 'outflows':0},
				'run2':{'gasmass_init':4e10, 'SFH':0,'gamma':0, \
				'IMF_fn':'Chab', 'dust_source':'LIMS+SN', 'destroy':True, \
				'inflows':0, 'outflows':0}}




init_runs = initial_galaxy_params[] #['run1', 'run2']
init_keys = ['gasmass_init','SFH','inflows','outflows','dust_source','destroy',\
'IMF_fn','gamma']

#Now we will test that the input parameters are A-OK:

for run in init_runs:
	# check if all the keys are present
	for k in init_keys:
		try:
			dummy = initial_galaxy_params[run][k]
		except KeyError:
			print("Oops key %r is missing in %r" % (k, run))
		else:
			# check gasmass, gamma, inflows and outflows are numbers:
			if (k == 'gasmass_init') or (k == 'inflows') \
				or (k == 'outflows') or (k == 'gamma'):
				try:
					dummy = int(initial_galaxy_params[run][k])
				except ValueError:
					print("Oops we were expecting a number in %r:%r" % (run,k))
		
			# check SFH is a string :
			if (k == 'SFH'):
				try:
					dummy = str(initial_galaxy_params[run][k])
				except ValueError:
					print("Oops we were expecting a string in %r:%r" % (run,k))


# is IMF_fn one of the four choices allowed
# is dust_source one of the four choices allowed
		